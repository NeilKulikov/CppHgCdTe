project(tests)

find_package(Boost COMPONENTS unit_test_framework REQUIRED)
find_package(GSL REQUIRED)

message("Tests pstl: " ${PSTL})

if(PSTL)
    find_package(TBB REQUIRED)
    add_definitions(-DUSE_PSTL)
endif(PSTL)

set(test1_source integration.cpp)
set(test2_source splines.cpp)
set(test3_source model.cpp)
set(test4_source matrix.cpp)
set(test5_source operators.cpp)
set(test6_source hamiltonian.cpp)
set(test7_source vector.cpp)
set(test8_source strain_model.cpp)
set(test9_source strain_hamiltonian.cpp)
set(test10_source rotations.cpp)
set(test11_source derive.cpp)
set(test12_source optimize.cpp)

add_executable(test1 ${test1_source})
add_executable(test2 ${test2_source})
add_executable(test3 ${test3_source})
add_executable(test4 ${test4_source})
add_executable(test5 ${test5_source})
add_executable(test6 ${test6_source})
add_executable(test7 ${test7_source})
add_executable(test8 ${test8_source})
add_executable(test9 ${test9_source})
add_executable(test10 ${test10_source})
add_executable(test11 ${test11_source})
add_executable(test12 ${test12_source})

if(PSTL)
    set(libs_list ${Boost_LIBRARIES} GSL::gsl TBB::tbb)
else(PSTL)
    set(libs_list ${Boost_LIBRARIES} GSL::gsl)
endif(PSTL)

target_link_libraries(test1 ${libs_list})
target_link_libraries(test2 ${libs_list})
target_link_libraries(test3 ${libs_list})
target_link_libraries(test4 ${libs_list})
target_link_libraries(test5 ${libs_list})
target_link_libraries(test6 ${libs_list})
target_link_libraries(test7 ${libs_list})
target_link_libraries(test8 ${libs_list})
target_link_libraries(test9 ${libs_list})
target_link_libraries(test10 ${libs_list})
target_link_libraries(test11 ${libs_list})
target_link_libraries(test12 ${libs_list})

add_test(NAME Integration COMMAND test1)
add_test(NAME Splines COMMAND test2)
add_test(NAME Models COMMAND test3)
add_test(NAME Matrix COMMAND test4)
add_test(NAME Operators COMMAND test5)
add_test(NAME Hamiltonian COMMAND test6)
add_test(NAME Vector COMMAND test7)
add_test(NAME StrainModel COMMAND test8)
add_test(NAME StrainHamiltonian COMMAND test9)
add_test(NAME Rotations COMMAND test10)
add_test(NAME Derive COMMAND test11)
add_test(NAME Optimize COMMAND test12)